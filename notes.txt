<!-- Notes: -->
<!-- value="@gmail.com" -->
<!-- <input type="submit" value="Texto del botón"> -->

<!-- Formas de agregar estilos:
1. En línea: utilizando el atributo 'style' en la etiqueta.
2. Utilizando la etiqueta style dentro del HTML.
3. Externos. -->

<!-- Tipos de Display:
display: block -> Un elemento ocupa todo el ancho posible.

display: inline -> Espera un poco más de contenido a su derecha.

display: list-item -> Muestra el contenido ocupando todo el ancho posible.

display: inline-block -> Combina la propiedad de inline con block. Posiciona el
elemento inline, pero respeta la longitud que se le ha asignado desde el css.

display: flex -> muestra los elementos a un costado del otro,
pero cuando son demasiados elementos, no se respeta el ancho que se les
asignó, se rompe el modelo de caja.

flex-direction: column -> cada elemento ocupa toda la fila, muestra
los elementos en forma vertical. Si se cambia el elemento a ésta propiedad,
las propiedades: 'Justify-content' y 'Align-items' van a cambiar de
sentido tambien, porque es como si se estuviera girando el contenedor
cuando se le aplica ésta propiedad.

flex-shrinck: 0 -> Indica cuanto un elemento puede encojerse.

flex-wrap: -> indica que cuando ya no cabe un elemento, los elementos
pasan a otra línea, si los elementos se muestran horizontalmente. -->


<!-- Alinear elementos de forma horizontal
justify-content: flex-start -> Ubica los elementos a la izquierda

justify-content: center -> Ubica los elementos al centro del 
contenedor.

justify-content: space-between -> distribuye los elementos sin
márgenes al final y al inicio del contenedor

justify-content: space-evenly -> distribuye los elementos asignando
márgenes al final y al inicio del contenedor

justify-content: space-around -> genera un espacido igual entre
los hijos del contenedor. -->

<!-- Alinear elementos de forma vertical
align-items: center -> Alinea los elementos de forma vertical.

align-self: flex-star -> El elemento especificado se alinea 
a dónde se esté especificando -->

Unidades de medida:
porcentaje: Longitud referente al tamaño de los elementos padre.

em: uniad relativa al tamaño de fuente
especificada más cercano. Si tengo un tamaño de fuente
situado en el propi elemento, si se utiliza para una propiedad
como heigh, width, padding, margin u otra cosa que sea para no
establecer una fuente, se toma el elemento de fuente.

rem: Unidad relativa al tamaño de fuente especificadaen el
ancestro más lejano (html o body)

vw / vh: unidad relativa porcentual con respecto al Viewport

Se puede obtener un media query desde la etiqueta link:
<link rel=stylesheet" href"css/media.css" media="screen and (max-width:768px)"/>